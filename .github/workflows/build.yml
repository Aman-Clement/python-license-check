name: build
on:
    push:
        branches: [ '*' ]
        tags: [ '*' ]
    pull_request:
        branches: [ '*' ]
jobs:
    build:
        runs-on: ubuntu-latest
        strategy:
            matrix:
                python-version: [ 2.7, 3.5, 3.6, 3.7, 3.8, 3.9 ]
        steps:
            -   uses: actions/checkout@v2
            -   name: set up Python ${{ matrix.python-version }}
                uses: actions/setup-python@v2
                with:
                    python-version: ${{ matrix.python-version }}
            -   name: install dependencies
                run: |
                    python -m pip install --upgrade pip
                    pip install -U tox tox-gh-actions setuptools wheel
                    pip install -r test-requirements.txt
            -   name: test with tox
                env:
                    PYTEST_ADDOPTS: "--strict --cov --cov-report=term-missing --cov-report=xml"
                run: tox
            -   name: codecov
                uses: codecov/codecov-action@v1
    check:
        runs-on: ubuntu-latest
        outputs:
            release_version: ${{ steps.check_tag.outputs.release_version }}
        steps:
            -   name: check tag
                id: check_tag
                run: |
                    TAG=${GITHUB_REF#refs/*/}
                    if echo "$TAG" | egrep '^[0-9]+\.[0-9]+\.[0-9]+(-[0-9]+)?$'
                    then
                        # the tag looks like a version number: will proceed with release deployment
                        echo ::set-output name=release_version::$TAG
                    fi
    deploy:
        runs-on: ubuntu-latest
        needs: [ check, build ]
        if: ${{ needs.check.outputs.release_version }}
        steps:
            -   uses: actions/checkout@v2
            -   name: build sdist
                run: |
                    export RELEASE_VERSION=${{ needs.check.outputs.release_version }}
                    python setup.py sdist
            -   name: deploy on pypi
                uses: pypa/gh-action-pypi-publish@master
                with:
                    password: ${{ secrets.PYPI_API_TOKEN }}
